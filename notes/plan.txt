<?
// 1) подготовленные запросы ? 
// 2) универсальные функции поиска, просмотра записей 
// 3) вывод из универсальных функций в одной переменной 
	// a) подтверждение удаления, взаимодействий с базой 
// 4) переход на нужную страницу 
// 5) разграничение прав
	// а) действий
	// б) вида
// 6) страница 1 записи
	// а) редактирование
	// б) влияние на сессию логгед юзер 
// 7) доработка check_... на регулярки 
	// а) доработка проверок логина, ... ^[a-z0-9]{1,10}\z 
	// б) ^	Начало строки               \A	Начало текста 
// 8) Универсальный popup 
	// а) подтверждение изменений данных своего аккаунта 
	// б) переделать остальные под стандартные 
	// в) переделать названия 
// 9) соль для паролей (из даты регистрации?) 
	// а) добавить поле даты регистрации 
// 10) настройки отображения в сессии ['set_item']['одна запись', 'другая запись'] и ['set_list']['запись'] 
// 11) собрать все скрипты js в один файл 
	а) добавить проверку загрузки документа?
	// б) файл включить, например, в футер 
12) приборы - все записи
	а) поиск (с предустановкой фильтра на активные записи)
	б) сортировка
	г) изменение статуса
	д) кнопка добавления
	) права
13) таблица ремонтов
	// а) поля: текст, запчасти, дата выполнения, статус, [дата/автор последнего изменения], удалить 
	// б) удаление одной строки из базы с подтверждением ( поле операция: do_del_repair ) ? 
	// в) редактирование одной или нескольких строк в базе (если есть id) 
	// г) добавление строк, одной или нескольких, их сохранение 
	// д) поле id (если есть - редактирование, нет - создание) 
	) фильтр активных записей (checkbox)
	) сортировка (по умолчанию - по дате ремонта)
	) при добавлении/изменении последняя дата ремонта пишется в главную таблицу (если она >)
14) таблица поверок
	а) поля: дата поверки, дата следующей поверки, статус
	) при добавлении/изменении последняя дата следующей поверки с соответствующей датой поверки пишется в главную таблицу (если она >)
	) фильтр активных записей (checkbox)
	) сортировка (по умолчанию - по дате следующей поверки)
15) приборы - одна запись
	) поля: название, тип, номер, год, дата поверки, дата следующей поверки, дата ремонта, дата последнего изменения, автор изменения, статус
	а) создание
	б) редактирование
	// в) js: function create_inputs_send( parent_id ){ 
	д) подчиненные таблицы
	// е) номера при создании должны проверяться на существование таких же в базе 
	ё) можно сделать ссылку на запрос с фильтром по этому номеру
	// ж) contenteditable добавляет div на перенос 
	) не создавать дополнительные таблицы, если данные пустые
	) права
16) проверить поля таблиц на соответствие типу и размеру / заморозка структуры
17) проверка get post параметры check_numeric()
18) html экранирование символов нужно применять при выводе, а хранить неэкранированные строки (для ограничения длины при вводе)
	а) htmlentities(,,"UTF-...")
// 19) foreach - ошибка : value - это не ссылка; ошибка есть в change_dev_data 


// $user = R::load('users', 29);
// $enter = R::dispense('enter');
// $enter->date = 'Вчера заходил вроде';
// $user->xownEnterList[] = $enter;
// R::store($user);	

-----------------------------------------
if (post){
	session[post] = post
	redirect /
} elseif(get){
	session[get] = get
	redirect /
} else{
	if (session[post]) {
		обработка session[post]
		unset(session[post])
	}
	if (session[get]) {
		обработка session[get]
		unset(session[get])
	}	
	отображение
}
-----------------------------------------